diff --git a/node_modules/@near-js/utils/lib/provider.d.ts b/node_modules/@near-js/utils/lib/provider.d.ts
index f7af838..73ec69f 100644
--- a/node_modules/@near-js/utils/lib/provider.d.ts
+++ b/node_modules/@near-js/utils/lib/provider.d.ts
@@ -1,4 +1,4 @@
-import { FinalExecutionOutcome } from '@near-js/types';
+import { TxOutcome } from '@near-js/types';
 /** @hidden */
-export declare function getTransactionLastResult(txResult: FinalExecutionOutcome): any;
+export declare function getTransactionLastResult(txResult: TxOutcome): any;
 //# sourceMappingURL=provider.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@near-js/utils/lib/provider.d.ts.map b/node_modules/@near-js/utils/lib/provider.d.ts.map
index 225f5dd..4983d82 100644
--- a/node_modules/@near-js/utils/lib/provider.d.ts.map
+++ b/node_modules/@near-js/utils/lib/provider.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"provider.d.ts","sourceRoot":"","sources":["../src/provider.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,gBAAgB,CAAC;AAEvD,cAAc;AACd,wBAAgB,wBAAwB,CAAC,QAAQ,EAAE,qBAAqB,GAAG,GAAG,CAU7E"}
\ No newline at end of file
+{"version":3,"file":"provider.d.ts","sourceRoot":"","sources":["../src/provider.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,cAAc;AACd,wBAAgB,wBAAwB,CAAC,QAAQ,EAAE,SAAS,GAAG,GAAG,CAUjE"}
\ No newline at end of file
diff --git a/node_modules/@near-js/utils/lib/provider.js b/node_modules/@near-js/utils/lib/provider.js
index c50b3a9..12c052f 100644
--- a/node_modules/@near-js/utils/lib/provider.js
+++ b/node_modules/@near-js/utils/lib/provider.js
@@ -3,8 +3,8 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.getTransactionLastResult = void 0;
 /** @hidden */
 function getTransactionLastResult(txResult) {
-    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {
-        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();
+    if (typeof txResult.final_execution_outcome.status === 'object' && typeof txResult.final_execution_outcome.status.SuccessValue === 'string') {
+        const value = Buffer.from(txResult.final_execution_outcome.status.SuccessValue, 'base64').toString();
         try {
             return JSON.parse(value);
         }
